def server
def buildInfo
def rtMaven

pipeline {
    agent any
    tools {
        maven 'maven-3.8.1'
        jdk 'openjdk-11'
    }
    stages {
        stage ('Clean') {
            steps {
                cleanWs()
            }
        }
        stage ('Clone') {
            steps {
                checkout scm
            }
        }
        
        stage ('Artifactory configuration') {
        steps {
        script {
        // Obtain an Artifactory server instance, defined in Jenkins --> Manage Jenkins --> Configure System:
        server = Artifactory.server 'test_java'

        rtMaven = Artifactory.newMavenBuild()
        rtMaven.tool = 'maven-3.8.1' // Tool name from Jenkins configuration
        rtMaven.deployer releaseRepo: 'default-libs-release', snapshotRepo: 'default-libs-release-local', server: server
        rtMaven.resolver releaseRepo: 'default-libs-release', snapshotRepo: 'aaa', server: server
        rtMaven.deployer.deployArtifacts = false // Disable artifacts deployment during Maven run

        buildInfo = Artifactory.newBuildInfo()
        }
        }
        }
        stage ('Build') {
            steps {
            script{
            rtMaven.run pom: 'pom.xml', goals: 'install', buildInfo: buildInfo
            //    sh 'mvn -Dmaven.test.failure.ignore=true install' 
            }
            }
        }
        
        // stage ('Upload file') {
        //    steps {
        //        rtUpload (
                    // Obtain an Artifactory server instance, defined in Jenkins --> Manage Jenkins --> Configure System:
        //            serverId: "test_java",
        //            spec: """{
        //                    "files": [
        //                            {
        //                                "pattern": "target/hello-world-*-SNAPSHOT.jar",
        //                                "target": "default-libs-release-local"
        //                           }
        //                        ]
        //                }"""
        //        )
        //    }
        //}
        
        stage ('Deploy') {
        steps {
        script {
        rtMaven.deployer.deployArtifacts buildInfo
        }
        }
    }
        
    stage ('Publish build info') {
    steps {
    script {
        server.publishBuildInfo buildInfo
      }
        }
    }
        

    }
  
}

